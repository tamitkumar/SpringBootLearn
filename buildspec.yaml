version: 0.2

phases:
  pre_build:
    commands:
      - mvn clean install
      - echo Logging in to Amazon ECR...
      - aws --version
      - REPOSITORY_URI=132906916903.dkr.ecr.us-east-1.amazonaws.com/techbrain-repository
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $REPOSITORY_URI  # Login to ECR
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)  # Optional: Getting commit hash for tagging
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')  # Tag for Docker image

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - ls target  # Verifying the target directory has the JAR file
      - docker build -t $REPOSITORY_URI:latest .  # Build Docker image tagged as 'latest'
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG  # Additional tag using unique build ID

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest  # Push 'latest' tag
      - docker push $REPOSITORY_URI:$IMAGE_TAG  # Push unique build tag
      - echo Writing image definitions file...
      - printf '[{"name":"SpringBootLearn-1.0","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json  # Write the image URI to file
      - echo Writing image definitions file...
      # add your container name
      - DOCKER_CONTAINER_NAME=techbrain-repository
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo $DOCKER_CONTAINER_NAME
      - echo printing imagedefinitions.json
      - cat imagedefinitions.json  # Print the file content to check

artifacts:
  files:
    - imagedefinitions.json  # Artifact needed for ECS deployment
    - target/SpringBootLearn-1.0.jar  # Optional: If you need to retain JAR as an artifact
